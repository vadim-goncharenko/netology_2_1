{"ast":null,"code":"import _slicedToArray from \"C:\\\\Profession\\\\Practice\\\\React_Netology\\\\dz_2_1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Profession\\\\Practice\\\\React_Netology\\\\dz_2_1\\\\src\\\\components\\\\Portfolio.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\n/**\n * Компонент для визуализации доступных фильтров\n * \n * @param filters Список доступных фильтров \n * @param selected Выбранный фильтр \n * @param onSelectFilter Обработчик фильтрации \n * @returns\n */\n\nconst Toolbar = ({\n  filters,\n  selected,\n  onSelectFilter\n}) => React.createElement(\"div\", {\n  className: \"toolbar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, filters.map((filter, index) => React.createElement(\"button\", {\n  className: selected == filter ? \"selected-btn\" : \"toolbar-btn\",\n  onClick: () => onSelectFilter(filter),\n  key: \"tool-btn-\" + index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, filter)));\n/**\n * Компонент для визуализации списка проектов\n * \n * @param items Список проектов для отображения \n * @returns \n */\n\n\nconst ProjectList = ({\n  items\n}) => React.createElement(React.Fragment, null, items.map(item => React.createElement(\"div\", {\n  className: \"portfolio-item\",\n  key: \"item-\" + item.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: item.img,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}))));\n\nconst ALL_ITEMS = \"All\";\n/**\n * Компонент для визуализации портфолио\n * \n * @param items Список \n * @returns \n */\n\nconst Portfolio = ({\n  items\n}) => {\n  const list = items.map((item, index) => Object.assign({\n    id: index\n  }, item));\n  const filters = [ALL_ITEMS].concat(Array.from(new Set(items.map(item => item.category))));\n\n  const _useState = useState(ALL_ITEMS),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const onSelectFilter = filter => setSelected(filter);\n\n  return React.createElement(\"div\", {\n    className: \"portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    filters: filters,\n    selected: selected,\n    onSelectFilter: onSelectFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(ProjectList, {\n    items: list.filter(item => ALL_ITEMS == selected || selected == item.category),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["C:/Profession/Practice/React_Netology/dz_2_1/src/components/Portfolio.js"],"names":["React","useState","Toolbar","filters","selected","onSelectFilter","map","filter","index","ProjectList","items","item","id","img","ALL_ITEMS","Portfolio","list","Object","assign","concat","Array","from","Set","category","setSelected"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;;;;;;;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KACd;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KACV;AACE,EAAA,SAAS,EAAGJ,QAAQ,IAAIG,MAAb,GAAuB,cAAvB,GAAwC,aADrD;AAEE,EAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,MAAD,CAF/B;AAGE,EAAA,GAAG,EAAE,cAAcC,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKGD,MALH,CADF,CAFJ,CADF;AAgBA;;;;;;;;AAMA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAClB,0CAEIA,KAAK,CAACJ,GAAN,CAAUK,IAAI,IACZ;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAgC,EAAA,GAAG,EAAE,UAAUA,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CAFJ,CADF;;AAYA,MAAMC,SAAS,GAAG,KAAlB;AAEA;;;;;;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAe;AAE/B,QAAMM,IAAI,GAAGN,KAAK,CAACJ,GAAN,CAAU,CAACK,IAAD,EAAOH,KAAP,KAAiBS,MAAM,CAACC,MAAP,CAAc;AAAEN,IAAAA,EAAE,EAAEJ;AAAN,GAAd,EAA6BG,IAA7B,CAA3B,CAAb;AACA,QAAMR,OAAO,GAAG,CAACW,SAAD,EAAYK,MAAZ,CAAmBC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQZ,KAAK,CAACJ,GAAN,CAAUK,IAAI,IAAIA,IAAI,CAACY,QAAvB,CAAR,CAAX,CAAnB,CAAhB;;AAH+B,oBAKCtB,QAAQ,CAACa,SAAD,CALT;AAAA;AAAA,QAKxBV,QALwB;AAAA,QAKdoB,WALc;;AAO/B,QAAMnB,cAAc,GAAGE,MAAM,IAAIiB,WAAW,CAACjB,MAAD,CAA5C;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEJ,OAAlB;AAA2B,IAAA,QAAQ,EAAEC,QAArC;AAA+C,IAAA,cAAc,EAAEC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEW,IAAI,CAACT,MAAL,CAAYI,IAAI,IAAKG,SAAS,IAAIV,QAAd,IAA4BA,QAAQ,IAAIO,IAAI,CAACY,QAAjE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAhBD;;AAkBA,eAAeR,SAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\n\n/**\n * Компонент для визуализации доступных фильтров\n * \n * @param filters Список доступных фильтров \n * @param selected Выбранный фильтр \n * @param onSelectFilter Обработчик фильтрации \n * @returns\n */\nconst Toolbar = ({ filters, selected, onSelectFilter }) => (\n  <div className=\"toolbar\">\n    {\n      filters.map((filter, index) => (\n        <button\n          className={(selected == filter) ? \"selected-btn\" : \"toolbar-btn\"}\n          onClick={() => onSelectFilter(filter)}\n          key={\"tool-btn-\" + index}\n        >\n          {filter}\n        </button>\n      ))\n    }\n  </div>\n);\n\n/**\n * Компонент для визуализации списка проектов\n * \n * @param items Список проектов для отображения \n * @returns \n */\nconst ProjectList = ({ items }) => (\n  <>\n    {\n      items.map(item => (\n        <div className=\"portfolio-item\" key={\"item-\" + item.id}>\n          <img src={item.img} />\n        </div>\n      ))\n    }\n  </>\n);\n\nconst ALL_ITEMS = \"All\";\n\n/**\n * Компонент для визуализации портфолио\n * \n * @param items Список \n * @returns \n */\nconst Portfolio = ({ items }) => {\n\n  const list = items.map((item, index) => Object.assign({ id: index }, item));\n  const filters = [ALL_ITEMS].concat(Array.from(new Set(items.map(item => item.category))));\n\n  const [selected, setSelected] = useState(ALL_ITEMS);\n\n  const onSelectFilter = filter => setSelected(filter);\n\n  return (\n    <div className=\"portfolio\">\n      <Toolbar filters={filters} selected={selected} onSelectFilter={onSelectFilter} />\n      <ProjectList items={list.filter(item => (ALL_ITEMS == selected) || (selected == item.category))} />\n    </div>\n  );\n\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}